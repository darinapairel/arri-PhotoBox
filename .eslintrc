{
  "env": {
    "browser": true,
    "es2021": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:react-hooks/recommended",
    "prettier"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": 12,
    "sourceType": "module"
  },
  "plugins": [
    "react-refresh",
    "simple-import-sort",
    "unused-imports",
    "prettier"
  ],
  "rules": {
    "prettier/prettier": [
      "error",
      {
        "endOfLine": "auto"
      }
    ],
    "react/react-in-jsx-scope": "off",
    "react/prop-types": "off",
    "react/display-name": "off",
    "no-multi-spaces": [
      "error"
    ],
    "no-duplicate-imports": 1,
    "react-hooks/rules-of-hooks": "error", // Проверяем правила хуков
    "react-hooks/exhaustive-deps": "warn", // Проверяем зависимости эффекта
    // NEW
    "no-nested-ternary": "error",
    "@typescript-eslint/ban-types": "error",
    "@typescript-eslint/no-empty-function": "warn",
    "@typescript-eslint/no-explicit-any": [
      "warn",
      {
        "ignoreRestArgs": true
      }
    ], // FIXME: Для такого нужен глубой рефакторинг
    // IMPORTS
    "simple-import-sort/imports": [
      "error",
      {
        "groups": [
          [
            "^react",
            "^@?\\w"
          ],
          [
            "^(@|pages)(/.*|$)"
          ],
          [
            "^(@|containers)(/.*|$)"
          ],
          [
            "^(@|components)(/.*|$)"
          ],
          [
            "^(@|elements)(/.*|$)"
          ],
          [
            "^(@|services)(/.*|$)"
          ],
          [
            "^(@|stores)(/.*|$)"
          ],
          [
            "^\\u0000"
          ]
        ]
      }
    ],
    "simple-import-sort/exports": "error",
    "no-unused-vars": "off",
    "@typescript-eslint/no-unused-vars": "off",
    "unused-imports/no-unused-imports": "error",
    "unused-imports/no-unused-vars": [
      "warn",
      {
        "vars": "all",
        "varsIgnorePattern": "^_",
        "args": "after-used",
        "argsIgnorePattern": "^_"
      }
    ]
  },
  "globals": {
    "React": "writable"
  },
  "settings": {
    "react": {
      "version": "detect"
    }
  }
}
